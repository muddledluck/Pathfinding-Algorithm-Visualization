{"ast":null,"code":"import React from\"react\";import Navbar from\"react-bootstrap/Navbar\";import Nav from\"react-bootstrap/Nav\";import NavDropdown from\"react-bootstrap/NavDropdown\";import Button from\"react-bootstrap/Button\";import\"bootstrap/dist/css/bootstrap.min.css\";import\"./Navbars.css\";var currentAlgo=\"\";export var wallOrWeight=\"wall\";export var Navbars=function Navbars(_ref){var visualizeBfs=_ref.visualizeBfs,visualizeDijkstra=_ref.visualizeDijkstra,visualizeAStar=_ref.visualizeAStar,resetGrid=_ref.resetGrid,resetPath=_ref.resetPath,resetWeight=_ref.resetWeight;return/*#__PURE__*/React.createElement(Navbar,{bg:\"primary\",expand:\"lg\"},/*#__PURE__*/React.createElement(Navbar.Brand,null,\"PathFinding Visulizer\"),/*#__PURE__*/React.createElement(Navbar.Toggle,{\"aria-controls\":\"basic-navbar-nav\"}),/*#__PURE__*/React.createElement(Navbar.Collapse,{id:\"basic-navbar-nav\"},/*#__PURE__*/React.createElement(Nav,{className:\"mr-auto\"},/*#__PURE__*/React.createElement(NavDropdown,{title:\"Algorithm\",id:\"basic-nav-dropdown\"},/*#__PURE__*/React.createElement(NavDropdown.Item,{onClick:function onClick(){var algo=document.getElementById(\"Vizu\");currentAlgo=\"Dijkstra\";algo.innerHTML=\"Visualize Dijkstra Algrithm\";}},\"Dijkstra's Shortest Path\"),/*#__PURE__*/React.createElement(NavDropdown.Item,{onClick:function onClick(){var algo=document.getElementById(\"Vizu\");currentAlgo=\"BFS\";algo.innerHTML=\"Visualize BFS Algorithm (Unweighted)\";}},\"BFS Shortest Path\"),/*#__PURE__*/React.createElement(NavDropdown.Item,{onClick:function onClick(){var algo=document.getElementById(\"Vizu\");currentAlgo=\"AStar\";algo.innerHTML=\"Visualize A* Algorithm\";}},\"A* Shortest Path\")),/*#__PURE__*/React.createElement(Button,{id:\"Vizu\",className:\"btn\",variant:\"info\",onClick:function onClick(){if(currentAlgo===\"\"){document.getElementById(\"Vizu\").innerHTML=\"Select Algorithm\";}else if(currentAlgo===\"BFS\"){resetPath();resetWeight();visualizeBfs();}else if(currentAlgo===\"Dijkstra\"){resetPath();visualizeDijkstra();}else if(currentAlgo===\"AStar\"){resetPath();visualizeAStar();}}},\"Algorithm\"),/*#__PURE__*/React.createElement(Button,{id:\"resetGrid\",className:\"btn\",variant:\"info\",onClick:function onClick(){return resetGrid();}},\"Clear Grid\"),/*#__PURE__*/React.createElement(Button,{id:\"resetPath\",className:\"btn\",variant:\"info\",onClick:function onClick(){return resetPath();}},\"Clear Path\"),/*#__PURE__*/React.createElement(NavDropdown,{title:\"Wall or Weight\",id:\"basic-nav-dropdown\"},/*#__PURE__*/React.createElement(NavDropdown.Item,{onClick:function onClick(){wallOrWeight=\"wall\";}},\"Wall\"),/*#__PURE__*/React.createElement(NavDropdown.Item,{onClick:function onClick(){wallOrWeight=\"weight\";}},\"Weight\")))));};","map":{"version":3,"sources":["F:/Coding/React/path-finding-visualizer/src/components/Navbars/Navbars.jsx"],"names":["React","Navbar","Nav","NavDropdown","Button","currentAlgo","wallOrWeight","Navbars","visualizeBfs","visualizeDijkstra","visualizeAStar","resetGrid","resetPath","resetWeight","algo","document","getElementById","innerHTML"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Navbars.css\";\r\n\r\nlet currentAlgo = \"\";\r\nexport let wallOrWeight = \"wall\";\r\nexport const Navbars = ({\r\n  visualizeBfs,\r\n  visualizeDijkstra,\r\n  visualizeAStar,\r\n  resetGrid,\r\n  resetPath,\r\n  resetWeight,\r\n}) => {\r\n  return (\r\n    <Navbar bg=\"primary\" expand=\"lg\">\r\n      <Navbar.Brand>PathFinding Visulizer</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavDropdown title=\"Algorithm\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item\r\n              onClick={() => {\r\n                const algo = document.getElementById(\"Vizu\");\r\n                currentAlgo = \"Dijkstra\";\r\n                algo.innerHTML = \"Visualize Dijkstra Algrithm\";\r\n              }}\r\n            >\r\n              Dijkstra's Shortest Path\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item\r\n              onClick={() => {\r\n                const algo = document.getElementById(\"Vizu\");\r\n                currentAlgo = \"BFS\";\r\n                algo.innerHTML = \"Visualize BFS Algorithm (Unweighted)\";\r\n              }}\r\n            >\r\n              BFS Shortest Path\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item\r\n              onClick={() => {\r\n                const algo = document.getElementById(\"Vizu\");\r\n                currentAlgo = \"AStar\";\r\n                algo.innerHTML = \"Visualize A* Algorithm\";\r\n              }}\r\n            >\r\n              A* Shortest Path\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n          <Button\r\n            id=\"Vizu\"\r\n            className=\"btn\"\r\n            variant=\"info\"\r\n            onClick={() => {\r\n              if (currentAlgo === \"\") {\r\n                document.getElementById(\"Vizu\").innerHTML = \"Select Algorithm\";\r\n              } else if (currentAlgo === \"BFS\") {\r\n                resetPath();\r\n                resetWeight();\r\n                visualizeBfs();\r\n              } else if (currentAlgo === \"Dijkstra\") {\r\n                resetPath();\r\n                visualizeDijkstra();\r\n              } else if (currentAlgo === \"AStar\") {\r\n                resetPath();\r\n                visualizeAStar();\r\n              }\r\n            }}\r\n          >\r\n            Algorithm\r\n          </Button>\r\n          <Button\r\n\r\n\r\n\r\n\r\n                                                        id=\"resetGrid\"\r\n\r\n\r\n\r\n\r\n                                                        className=\"btn\"\r\n\r\n\r\n\r\n\r\n                                                        variant=\"info\"\r\n\r\n\r\n\r\n\r\n                                                        onClick={() => resetGrid()}\r\n          \r\n          \r\n          \r\n          \r\n          >\r\n            Clear Grid\r\n          </Button>\r\n          <Button\r\n           \r\n           \r\n           \r\n           \r\n            id=\"resetPath\"\r\n           \r\n           \r\n           \r\n           \r\n            className=\"btn\"\r\n           \r\n           \r\n           \r\n           \r\n            variant=\"info\"\r\n           \r\n           \r\n           \r\n           \r\n            onClick={() => resetPath()}\r\n          \r\n          \r\n          \r\n          \r\n          >\r\n            Clear Path\r\n          </Button>\r\n          <NavDropdown title=\"Wall or Weight\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item\r\n              onClick={() => {\r\n                wallOrWeight = \"wall\";\r\n              }}\r\n            >\r\n              Wall\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item\r\n              onClick={() => {\r\n                wallOrWeight = \"weight\";\r\n              }}\r\n            >\r\n              Weight\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}