{"ast":null,"code":"export function gridIndexToArrayIndex(totalCol,currentRow,currentCol){return totalCol*currentRow+currentCol;}export function neiboursUnvisitedNode(grid,val,visitedNodesInOrder){var direction=[[-1,0],[0,-1],[1,0],[0,1]];var neibours=[];for(var i=0;i<4;i++){var at=[val[0]+direction[i][0],val[1]+direction[i][1]];var weight=void 0;if(at[0]<0||at[0]>=grid.length||at[1]>=grid[0].length||at[1]<0){continue;}else if(grid[at[0]][at[1]].isWall){continue;}else if(grid[at[0]][at[1]].isWeighted){visitedNodesInOrder.push(grid[val[0]][val[1]]);weight=15;}else{visitedNodesInOrder.push(grid[val[0]][val[1]]);weight=1;}neibours.push([at,weight]);}return neibours;}","map":{"version":3,"sources":["F:/Coding/React/path-finding-visualizer/src/algorithms/algorithmsHelper.jsx"],"names":["gridIndexToArrayIndex","totalCol","currentRow","currentCol","neiboursUnvisitedNode","grid","val","visitedNodesInOrder","direction","neibours","i","at","weight","length","isWall","isWeighted","push"],"mappings":"AAAA,MAAO,SAASA,CAAAA,qBAAT,CAA+BC,QAA/B,CAAyCC,UAAzC,CAAqDC,UAArD,CAAiE,CACpE,MAAOF,CAAAA,QAAQ,CAAGC,UAAX,CAAwBC,UAA/B,CACH,CAED,MAAO,SAASC,CAAAA,qBAAT,CAA+BC,IAA/B,CAAqCC,GAArC,CAA0CC,mBAA1C,CAA+D,CAClE,GAAMC,CAAAA,SAAS,CAAG,CAChB,CAAC,CAAC,CAAF,CAAK,CAAL,CADgB,CAEhB,CAAC,CAAD,CAAI,CAAC,CAAL,CAFgB,CAGhB,CAAC,CAAD,CAAI,CAAJ,CAHgB,CAIhB,CAAC,CAAD,CAAI,CAAJ,CAJgB,CAAlB,CAMA,GAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,CAApB,CAAuBA,CAAC,EAAxB,CAA4B,CAC1B,GAAIC,CAAAA,EAAE,CAAG,CAACL,GAAG,CAAC,CAAD,CAAH,CAASE,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAAV,CAA2BJ,GAAG,CAAC,CAAD,CAAH,CAASE,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAApC,CAAT,CACA,GAAIE,CAAAA,MAAM,OAAV,CAEA,GACED,EAAE,CAAC,CAAD,CAAF,CAAQ,CAAR,EACAA,EAAE,CAAC,CAAD,CAAF,EAASN,IAAI,CAACQ,MADd,EAEAF,EAAE,CAAC,CAAD,CAAF,EAASN,IAAI,CAAC,CAAD,CAAJ,CAAQQ,MAFjB,EAGAF,EAAE,CAAC,CAAD,CAAF,CAAQ,CAJV,CAKE,CACA,SACD,CAPD,IAOO,IAAIN,IAAI,CAACM,EAAE,CAAC,CAAD,CAAH,CAAJ,CAAYA,EAAE,CAAC,CAAD,CAAd,EAAmBG,MAAvB,CAA+B,CACpC,SACD,CAFM,IAEA,IAAIT,IAAI,CAACM,EAAE,CAAC,CAAD,CAAH,CAAJ,CAAYA,EAAE,CAAC,CAAD,CAAd,EAAmBI,UAAvB,CAAmC,CACxCR,mBAAmB,CAACS,IAApB,CAAyBX,IAAI,CAACC,GAAG,CAAC,CAAD,CAAJ,CAAJ,CAAaA,GAAG,CAAC,CAAD,CAAhB,CAAzB,EACEM,MAAM,CAAG,EAAT,CACH,CAHM,IAGA,CACLL,mBAAmB,CAACS,IAApB,CAAyBX,IAAI,CAACC,GAAG,CAAC,CAAD,CAAJ,CAAJ,CAAaA,GAAG,CAAC,CAAD,CAAhB,CAAzB,EACAM,MAAM,CAAG,CAAT,CACD,CACDH,QAAQ,CAACO,IAAT,CAAc,CAACL,EAAD,CAAKC,MAAL,CAAd,EACD,CACD,MAAOH,CAAAA,QAAP,CACD","sourcesContent":["export function gridIndexToArrayIndex(totalCol, currentRow, currentCol) {\r\n    return totalCol * currentRow + currentCol;\r\n}\r\n\r\nexport function neiboursUnvisitedNode(grid, val, visitedNodesInOrder) {\r\n    const direction = [\r\n      [-1, 0],\r\n      [0, -1],\r\n      [1, 0],\r\n      [0, 1],\r\n    ];\r\n    const neibours = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      let at = [val[0] + direction[i][0], val[1] + direction[i][1]];\r\n      let weight;\r\n  \r\n      if (\r\n        at[0] < 0 ||\r\n        at[0] >= grid.length ||\r\n        at[1] >= grid[0].length ||\r\n        at[1] < 0\r\n      ) {\r\n        continue;\r\n      } else if (grid[at[0]][at[1]].isWall) {\r\n        continue;\r\n      } else if (grid[at[0]][at[1]].isWeighted) {\r\n        visitedNodesInOrder.push(grid[val[0]][val[1]]);\r\n          weight = 15;\r\n      } else {\r\n        visitedNodesInOrder.push(grid[val[0]][val[1]]);\r\n        weight = 1;\r\n      }\r\n      neibours.push([at, weight]);\r\n    }\r\n    return neibours;\r\n  }\r\n\r\n"]},"metadata":{},"sourceType":"module"}